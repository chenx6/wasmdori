{"version":3,"file":"eventGacha.12229107.js","sources":["../../src/gacha.js"],"sourcesContent":["import { app, h, text } from \"hyperapp\"\nimport { translates } from \"./languages.js\"\nimport {\n    navBar,\n    getCurrLangNo,\n    jsonFetcher,\n    GotCardsData,\n    getResURL,\n    serverSelect,\n    getBannerUrl\n} from \"./utils\"\n\nconst dataIndex = 0; // JP Server\nconst nameIndex = 1; // English translation\n// permanent gacha and special gacha type will disturb table\nconst permanentGachas = [\n    \"★３以上確定チケットガチャ\",\n    \"スタートダッシュガチャ\",\n    \"初心者限定★4ミラクルチケットセットガチャ\"\n];\nconst excludeGachaType = [\"birthday\", \"special\"];\n\n// Effects\n\nconst GotEvents = (state, data) => {\n    return { ...state, events: Object.values(data) }\n}\n\nconst GotGachas = (state, data) => {\n    return { ...state, gachas: data }\n}\n\nconst GotCharactersData = (state, data) => ({\n    ...state, characters: data\n})\n\nconst GotSkillData = (state, data) => ({\n    ...state, rawSkills: data\n})\n\n// Find the gacha that matches the event time\nconst PairEventGacha = state => {\n    let pairs = [];\n    let lastEventTime = 0;\n    for (let event of state.events) {\n        // If event data in selected server doesn't have start date, we just add a time offset to previous event's date\n        let serverEventStart = event.startAt[state.server];\n        if (serverEventStart !== null && lastEventTime === 0) {\n            lastEventTime = parseInt(serverEventStart);\n        } else {\n            lastEventTime += 604800 * 1000; // Add a Week\n            event.startAt[state.server] = lastEventTime.toString();\n        }\n        const startAt = parseInt(event.startAt[dataIndex]);\n        const endAt = parseInt(event.endAt[dataIndex]);\n        let gachas = [];\n        for (const gacha of Object.values(state.gachas)) {\n            const publishAt = parseInt(gacha.publishedAt[dataIndex]);\n            const closedAt = parseInt(gacha.closedAt[dataIndex]);\n            // Find the gacha that closed to event's data\n            if (publishAt <= endAt && startAt <= closedAt // publishAt <= startAt && endAt <= closedAt\n                && !excludeGachaType.includes(gacha.type)\n                && !permanentGachas.includes(gacha.gachaName[dataIndex])) {\n                gachas.push(gacha);\n            }\n        }\n        gachas.sort((a, b) => a.publishedAt[dataIndex] - b.publishedAt[dataIndex]);\n        pairs.push({ event, gachas });\n    }\n    return { ...state, eventGachaPair: pairs };\n}\n\n// Sort event based on state.server time, then dataIndex time\nconst sortEvent = (server, a, b) => {\n    const aStartData = a.startAt[dataIndex];\n    const bStartData = b.startAt[dataIndex];\n    const aStartServer = a.startAt[server];\n    const bStartServer = b.startAt[server];\n    // If event a and event b has been held before, compare their start time\n    if (aStartServer !== null && bStartServer !== null) {\n        return aStartServer - bStartServer;\n        // If event a or event b has not been held, push it to the back of the array\n    } else if (aStartServer === null && bStartServer !== null) {\n        return 1;\n    } else if (aStartServer !== null && bStartServer === null) {\n        return -1;\n    } else {\n        return aStartData - bStartData;\n    }\n}\n\nconst ServerChange = (state, event) => {\n    state.server = parseInt(event.target.value);\n    const sort = (...args) => sortEvent(state.server, ...args);\n    state.events.sort(sort);\n    state = PairEventGacha(state);\n    return { ...state }\n}\n\n// turn UNIX timestrap to data string\nconst dataStr = data => new Intl\n    .DateTimeFormat('zh-CN', { dateStyle: 'full' })\n    .format(new Date(parseInt(data)))\n\nconst ChangeStartEvent = (state, event) => ({ ...state, startEvent: parseInt(event.target.value) })\n\nconst SetPageCount = (state, event) => ({ ...state, pageCount: parseInt(event.target.value) })\n\n// Views\n\n// Card thumb in game\nconst gameCard = (card, cardId, character, stars, trained = false) => h(\"div\", { class: \"col-auto p-2\" }, [\n    h(\"div\", { class: \"game-card-container\" }, [\n        h(\"img\", { src: getResURL(card, cardId, trained), class: \"game-card\", loading: \"lazy\" }),\n        h(\"div\", { class: `game-card-border game-card-border-${card.rarity}` }),\n        h(\"div\", { class: `game-card-band game-card-band-${character.bandId}` }),\n        h(\"div\", { class: `game-card-prop game-card-prop-${card.attribute}` }),\n        ...stars\n    ])\n])\n\n// Card's information\nconst horizonCard = (state, cardId) => {\n    const card = state.rawCards[cardId];\n    const character = state.characters[card.characterId];\n    const skill = state.rawSkills[card.skillId];\n    let stars = [], trainedStar = [];  // Add star element\n    for (let i = 1; i <= card.rarity; i++) {\n        stars.push(h(\"div\", { class: `game-card-star game-card-star-p${i}` }));\n        trainedStar.push(h(\"div\", { class: `game-card-star-trained game-card-star-p${i}` }));\n    }\n    return h(\"div\", { class: \"card mb-3\" }, [\n        h(\"div\", { class: \"row g-0 align-items-center\" }, [\n            gameCard(card, cardId, character, stars),\n            // Add padding when card's rarity <= 2\n            card.rarity > 2\n                ? gameCard(card, cardId, character, trainedStar, true)\n                : h(\"div\", { class: \"col-auto p-2\" }, [h(\"img\", { width: \"68\" })]),\n            h(\"div\", { class: \"col-md-8 p-2\" }, [\n                h(\"div\", { class: \"card-text\" }, text(character.characterName[state.server])),\n                h(\"div\", { class: \"card-text\" }, text(card.prefix[nameIndex])),\n                h(\"div\", { class: \"card-text\" }, text(skill.simpleDescription[state.server]))\n            ])\n        ])\n    ])\n}\n\n// Event-Gacha item\nconst eventGachaItem = (state, { event, gachas }) => h(\"div\", { class: \"row p-1\" }, [\n    h(\"div\", { class: \"col-md-6\" }, [\n        h(\"div\", { class: \"card\" }, [\n            h(\"img\", { src: getBannerUrl(\"jp\", event.bannerAssetBundleName), alt: state.language.loading, loading: \"lazy\", class: \"banner\" }),\n            h(\"div\", { class: \"card-body\" }, [\n                h(\"b\", { class: \"card-title\" }, text(event.eventName[nameIndex])),\n                h(\"div\", {}, text(dataStr(event.startAt[state.server]))),\n                ...event.rewardCards.map(cardId => horizonCard(state, cardId))\n            ])\n        ])\n    ]),\n    h(\"div\", { class: \"col-md-6\" }, [\n        h(\"div\", { class: \"card\" },\n            gachas.map(gacha => [\n                h(\"img\", { src: getBannerUrl(\"jp\", gacha.bannerAssetBundleName), alt: state.language.loading, loading: \"lazy\", class: \"banner\" }),\n                h(\"div\", { class: \"card-body\" }, [\n                    h(\"b\", { class: \"card-title\" }, text(gacha.gachaName[nameIndex])),\n                    h(\"div\", {}, text(dataStr(gacha.publishedAt[dataIndex]))),\n                    ...gacha.newCards.map(cardId => horizonCard(state, cardId))\n                ])]).flat()\n        )\n    ])\n])\n\nconst eventGachaList = state => h(\"div\", {},\n    state.eventGachaPair\n        .slice(state.startEvent, state.startEvent + state.pageCount)\n        .map(pair => eventGachaItem(state, pair)))\n\nconst filterView = state => h(\"div\", { class: \"row p-1\" }, [\n    h(\"div\", { class: \"col\" }, [\n        h(\"label\", {}, text(state.language.startEvent)),\n        h(\"select\", { class: \"form-select\", onchange: ChangeStartEvent }, [\n            ...state.events.map(\n                (v, idx) => h(\"option\", { value: idx.toString() },\n                    text(v.eventName[state.server]\n                        ? v.eventName[state.server]\n                        : v.eventName[dataIndex])))\n        ])\n    ])\n])\n\nconst pageCountSelector = state => h(\"div\", { class: \"row p-1\" }, [\n    h(\"div\", { class: \"col\" }, [\n        h(\"label\", {}, text(state.language.pageCount)),\n        h(\"select\", { class: \"form-control\", onchange: SetPageCount }, [\n            ...[3, 5, 7, 10].map(v => h(\"option\", { value: v.toString() }, text(v.toString())))\n        ])\n    ])\n])\n\n// App\n\napp({\n    init: [{\n        gachas: null,\n        events: null,\n        rawCards: null,\n        characters: null,\n        rawSkills: null,\n        server: 0,\n        startEvent: 0,\n        pageCount: 3,\n        language: translates[getCurrLangNo()],\n        eventGachaPair: [],\n    },\n    jsonFetcher(\"data/events.json\", GotEvents),\n    jsonFetcher(\"data/gachas.json\", GotGachas),\n    jsonFetcher(\"data/cards.json\", GotCardsData),\n    jsonFetcher(\"data/characters.json\", GotCharactersData),\n    jsonFetcher(\"data/skills.json\", GotSkillData),\n    ],\n    view: state => h(\"div\", {}, [\n        navBar(state),\n        h(\"div\", { class: \"container\" }, [\n            serverSelect(state, ServerChange),\n            state.events && filterView(state),\n            pageCountSelector(state),\n            (state.gachas\n                && state.events\n                && state.rawCards\n                && state.characters\n                && state.rawSkills\n                && state.eventGachaPair.length !== 0\n            ) && eventGachaList(state),\n        ])\n    ]),\n    node: document.getElementById(\"app\")\n})"],"names":["permanentGachas","excludeGachaType","ServerChange","state","event","server","parseInt","target","value","events","sort","args","a","b","aStartData","startAt","bStartData","aStartServer","bStartServer","sortEvent","pairs","lastEventTime","serverEventStart","toString","endAt","gachas","gacha","Object","values","publishAt","publishedAt","closedAt","includes","type","gachaName","push","__spreadProps","eventGachaPair","PairEventGacha","__spreadValues","dataStr","Intl","DateTimeFormat","dateStyle","format","Date","data","ChangeStartEvent","startEvent","SetPageCount","pageCount","gameCard","card","cardId","character","stars","trained","h","class","src","getResURL","loading","rarity","bandId","attribute","horizonCard","rawCards","characters","characterId","skill","rawSkills","skillId","trainedStar","i","width","text","characterName","prefix","simpleDescription","eventGachaList","slice","map","getBannerUrl","bannerAssetBundleName","alt","language","eventName","rewardCards","newCards","flat","eventGachaItem","pair","filterView","onchange","v","idx","pageCountSelector","app","init","translates","getCurrLangNo","jsonFetcher","GotCardsData","view","navBar","serverSelect","length","node","document","getElementById"],"mappings":"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"}