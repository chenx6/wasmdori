{"version":3,"file":"team_builder.0b2b2fd8.js","sources":["../../libs/bgp_team_builder.js","../../src/team_builder.js"],"sourcesContent":["\nlet wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n*/\nexport function init_panic_hook() {\n    wasm.init_panic_hook();\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* Use JS side data to build team that can get best score\n* @param {any} event_bonus\n* @param {any} cards\n* @param {any} raw_user_profile\n* @param {any} characters\n* @param {any} bands\n* @param {any} song_data\n* @param {any} skills\n* @param {number} event_type\n* @returns {any}\n*/\nexport function gene_score(event_bonus, cards, raw_user_profile, characters, bands, song_data, skills, event_type) {\n    try {\n        var ret = wasm.gene_score(addBorrowedObject(event_bonus), addBorrowedObject(cards), addBorrowedObject(raw_user_profile), addBorrowedObject(characters), addBorrowedObject(bands), addBorrowedObject(song_data), addBorrowedObject(skills), event_type);\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n        heap[stack_pointer++] = undefined;\n        heap[stack_pointer++] = undefined;\n        heap[stack_pointer++] = undefined;\n        heap[stack_pointer++] = undefined;\n        heap[stack_pointer++] = undefined;\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n*/\nexport const EventType = Object.freeze({ Free:0,\"0\":\"Free\",Multi:1,\"1\":\"Multi\",VS:2,\"2\":\"VS\", });\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('bgp_team_builder_bg.wasm', import.meta.url);\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_json_parse = function(arg0, arg1) {\n        var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_json_serialize = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        var ret = JSON.stringify(obj === undefined ? null : obj);\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_new_59cb74e423758ede = function() {\n        var ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n        var ret = getObject(arg1).stack;\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n        try {\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(arg0, arg1);\n        }\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;\n\n","import { h, text, app } from \"hyperapp\"\nimport {\n    jsonFetcher,\n    GotBandsData,\n    GotCardsData,\n    navBar,\n    getResURL,\n    getCurrLangNo,\n    serverSelect,\n    selectedProfileLoader\n} from \"./utils.js\"\nimport { translates } from \"./languages.js\"\nimport init, { gene_score } from '../libs/bgp_team_builder';\n\n// Without argument will cause a error by rollup\n// (Can't handle import.meta.url)...\ninit(\"./bgp_team_builder_bg.wasm\");\n\n// Actions && Effects\n\nconst ParameterChanged = (state, event) => ({\n    ...state,\n    parameter: event.target.value\n})\n\nconst PropertyChanged = (state, event) => ({\n    ...state,\n    prop: event.target.value\n})\n\nconst CheckboxChanged = (state, idStr) => {\n    let origin = state.selectedCharacters;\n    let id = parseInt(idStr);\n    let newSelected = origin.includes(id)\n        ? origin.filter((v) => v != id)\n        : origin.push(id) && origin;\n    return {\n        ...state,\n        selectedCharacters: newSelected\n    }\n}\n\n// Turn raw character data into the data in array\nconst GotCharacterData = (state, data) => {\n    let characters = [];\n    for (const k of Object.keys(data)) {\n        characters.push({ ...data[k], id: k });\n    }\n    return {\n        ...state,\n        characters: characters,\n        rawCharacters: data\n    }\n}\n\nconst GotSongData = (state, data) => ({\n    ...state, selectedSong: songNotes(data)\n})\n\nconst GotSkillData = (state, data) => ({\n    ...state, rawSkills: data\n})\n\nconst PropBonusChanged = (state, event) => ({\n    ...state,\n    propBonus: parseFloat(event.target.value) / 100\n})\n\nconst CharacterBonusChanged = (state, event) => ({\n    ...state,\n    characterBonus: parseFloat(event.target.value) / 100\n})\n\nconst AllFitBonusChanged = (state, event) => ({\n    ...state,\n    allFitBonus: parseFloat(event.target.value) / 100\n})\n\nconst EventTypeChanged = (state, event) => ({\n    ...state,\n    eventType: parseInt(event.target.value)\n})\n\n// A Shim aims to fit Bestdori's new song format\nconst songNotes = (apiChart) => {\n    let notes = [];\n    let timePerBeat = 0;\n    let prevBeat = 0;\n    let currTime = 0;\n    apiChart\n        .filter(t => 'BPM' === t.type)\n        .sort((t, e) => t.beat - e.beat)\n        .forEach(s => {\n            currTime += (s.beat - prevBeat) * timePerBeat;\n            prevBeat = s.beat;\n            timePerBeat = 60 / s.bpm;\n            notes.unshift({\n                beat: prevBeat,\n                time: currTime,\n                timePerBeat: timePerBeat\n            });\n        });\n    const calcTime = e => {\n        for (let its = 0; its < notes.length; its++) {\n            let s = notes[its];\n            if (e >= s.beat)\n                return s.time + (e - s.beat) * s.timePerBeat\n        }\n        return 0;\n    };\n    const feverStartNote = apiChart.find(t => 'System' === t.type && 'cmd_fever_start.wav' === t.data);\n    const feverEndNote = apiChart.find(t => 'System' === t.type && 'cmd_fever_end.wav' === t.data);\n    const feverStart = feverStartNote ? feverStartNote.beat : -1;\n    const feverEnd = feverEndNote ? feverEndNote.beat : -1;\n    let oldList = [];\n    apiChart.forEach(t => {\n        switch (t.type) {\n            case 'Single':\n            case 'Directional':\n                oldList.push({\n                    time: calcTime(t.beat),\n                    fever: t.beat >= feverStart && t.beat <= feverEnd,\n                    skill: t.skill\n                });\n                break;\n            case 'Slide':\n            case 'Long':\n                t.connections.forEach(t => {\n                    t.hidden || oldList.push({\n                        time: calcTime(t.beat),\n                        fever: t.beat >= feverStart && t.beat <= feverEnd,\n                        skill: t.skill\n                    })\n                });\n                break;\n        }\n    });\n    oldList.sort((t, e) => t.time - e.time || !!e.skill - !!t.skill);\n    return oldList;\n}\n\nconst BuildTeam = state => {\n    // Input validation\n    if (state.selectedCharacters.length != 5 || state.selectedProfile === null) {\n        return state;\n    }\n    let event_bonus = {\n        prop: state.prop,\n        parameter: state.parameter,\n        characters: state.selectedCharacters,\n        prop_bonus: state.propBonus,\n        character_bonus: state.characterBonus,\n        all_fit_bonus: state.allFitBonus,\n    };\n    const begin = Date.now();\n    let result = gene_score(event_bonus,\n        state.rawCards,\n        state.selectedProfile,\n        state.rawCharacters,\n        state.rawBands,\n        state.selectedSong,\n        state.rawSkills,\n        state.eventType);\n    console.log(\"Time: %d\", Date.now() - begin);\n    return {\n        ...state,\n        bestTeam: result\n    }\n}\n\n// Views\n\n// Character select box\nconst characterInputBox = (state, character) =>\n    character.characterName[state.server] && h(\"div\", { class: \"p-1\" }, [\n        h(\"label\", { for: character.id, class: \"form-check-label\" }, text(character.characterName[state.server])),\n        h(\"input\", { type: \"checkbox\", name: character.id, class: \"form-check-input\", onclick: [CheckboxChanged, character.id] })\n    ])\n\n// Character input group\nconst characterInputGroup = state => h(\"div\", { class: \"row p-1\" }, [\n    h(\"div\", { class: \"col\" }, [\n        h(\"label\", {}, text(state.language.selectCharacter)),\n        h(\"div\", { class: \"col input-group\" },\n            state.characters\n                .map(character => characterInputBox(state, character))\n        )\n    ])\n])\n\nconst selectParaBox = state => h(\"div\", { class: \"col\" }, [\n    h(\"label\", { for: \"prop\" }, text(state.language.selectProperty)),\n    h(\"select\", { name: \"prop\", id: \"prop\", class: \"form-select\", onchange: PropertyChanged }, [\n        h(\"option\", { value: \"happy\" }, text(\"Happy\")),\n        h(\"option\", { value: \"pure\" }, text(\"Pure\")),\n        h(\"option\", { value: \"cool\" }, text(\"Cool\")),\n        h(\"option\", { value: \"powerful\" }, text(\"Powerful\")),\n    ])\n])\n\nconst selectPropBox = state => h(\"div\", { class: \"col\" }, [\n    h(\"label\", { for: \"parameter\" }, text(state.language.selectParameter)),\n    h(\"select\", { name: \"parameter\", id: \"parameter\", class: \"form-select\", onchange: ParameterChanged }, [\n        h(\"option\", { value: \"performance\" }, text(state.language.performance)),\n        h(\"option\", { value: \"technique\" }, text(state.language.technique)),\n        h(\"option\", { value: \"visual\" }, text(state.language.visual)),\n    ])\n])\n\nconst bonusInput = state => h(\"div\", { class: \"row p-1\" }, [\n    h(\"div\", { class: \"col\" }, [\n        h(\"label\", { class: \"form-label\" }, text(state.language.propBonus)),\n        h(\"div\", { class: \"input-group\" }, [\n            h(\"input\", { type: \"number\", step: \"10\", min: \"0\", max: \"100\", class: \"form-control\", onchange: PropBonusChanged }),\n            h(\"span\", { class: \"input-group-text\" }, text(\"%\"))\n        ]),\n    ]),\n    h(\"div\", { class: \"col\" }, [\n        h(\"label\", { class: \"form-label\" }, text(state.language.characterBonus)),\n        h(\"div\", { class: \"input-group\" }, [\n            h(\"input\", { type: \"number\", step: \"10\", min: \"0\", max: \"100\", class: \"form-control\", onchange: CharacterBonusChanged }),\n            h(\"span\", { class: \"input-group-text\" }, text(\"%\"))\n        ]),\n    ]),\n    h(\"div\", { class: \"col\" }, [\n        h(\"label\", { class: \"form-label\" }, text(state.language.allFitBonus)),\n        h(\"div\", { class: \"input-group\" }, [\n            h(\"input\", { type: \"number\", step: \"10\", min: \"0\", max: \"100\", class: \"form-control\", onchange: AllFitBonusChanged }),\n            h(\"span\", { class: \"input-group-text\" }, text(\"%\"))\n        ])\n    ]),\n])\n\nconst eventTypeInput = state => h(\"div\", { class: \"row p-1\" }, [\n    h(\"div\", { class: \"col\" }, [\n        h(\"label\", { class: \"form-label\" }, text(state.language.selectMode)),\n        h(\"select\", { class: \"form-select\", onchange: EventTypeChanged }, [\n            ...[state.language.freePlay, state.language.multiPlay, state.language.vsPlay]\n                .map((v, idx) => h(\"option\", { value: idx.toString() }, text(v)))\n        ])\n    ])\n])\n\nconst resultTeamView = state => h(\"div\", { class: \"row justify-content-md-center p-1\" },\n    Object.values(state.bestTeam).map((v) => h(\"div\", { class: \"card col\" }, [\n        // Use getResURL to get card's image\n        h(\"img\", { src: getResURL(state.rawCards[v.card_id], v.card_id), width: \"64\", class: \"card-img-top\" }),\n        h(\"ul\", { class: \"list-group list-group-flush\" }, [\n            h(\"li\", { class: \"list-group-item text-truncate\" }, text(state.rawCards[v.card_id].prefix[state.server]))\n        ])\n    ]))\n)\n\n// App\n\napp({\n    init: [{\n        characters: [], // Characters data (names, id...)\n        selectedCharacters: [], // Selected bonus character\n        server: 0,\n        language: translates[getCurrLangNo()],\n        prop: \"happy\", // Bonus properity\n        parameter: \"happy\", // Bonus parameter\n        propBonus: 0,\n        characterBonus: 0,\n        allFitBonus: 0,\n        eventType: 0,\n        bestTeam: [], // Calculated result\n        rawCharacters: {}, // Bestdori's raw data\n        rawBands: null,\n        rawCards: null,\n        rawSkills: null,\n        profiles: [], // All profiles\n        selectedProfile: {}, // Primary profile,\n        selectedSong: {} // Song data from bestdori\n    },\n    jsonFetcher(\"data/characters.json\", GotCharacterData),\n    jsonFetcher(\"data/bands.json\", GotBandsData),\n    jsonFetcher(\"data/cards.json\", GotCardsData),\n    jsonFetcher(\"data/125.expert.json\", GotSongData), // TODO: REPLACE A to Z！A to Z！天下を, A to Z！A to Z！取ります！\n    jsonFetcher(\"data/skills.json\", GotSkillData),\n    selectedProfileLoader()\n    ],\n    view: state => h(\"div\", {}, [\n        navBar(state),\n        h(\"div\", { class: \"container\" }, [\n            serverSelect(state),\n            characterInputGroup(state),\n            h(\"div\", { class: \"row p-1\" }, [\n                selectPropBox(state),\n                selectParaBox(state),\n            ]),\n            bonusInput(state),\n            eventTypeInput(state),\n            h(\"div\", { class: \"row p-1\" }, [\n                h(\"div\", { claas: \"col\" }, [\n                    h(\"button\", { class: \"btn btn-primary\", onclick: [BuildTeam] }, text(state.language.generate))\n                ])\n            ]),\n            state.bestTeam.length != 0 && resultTeamView(state)\n        ])\n    ]),\n    node: document.getElementById(\"app\"),\n})\n"],"names":["wasm","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","buffer","memory","Uint8Array","ptr","len","getUint8Memory0","subarray","heap","Array","fill","push","heap_next","length","obj","idx","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","malloc","realloc","ptr2","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","Int32Array","ret","getObject","stack_pointer","Error","Object","freeze","Free","0","Multi","1","VS","2","async","input","URL","import_meta","url","imports","wbg","__wbindgen_json_parse","arg0","arg1","addHeapObject","JSON","parse","getStringFromWasm0","__wbindgen_json_serialize","ptr0","passStringToWasm0","stringify","__wbindgen_malloc","__wbindgen_realloc","len0","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","stack","__wbg_error_4bb6c2a97407129a","error","__wbindgen_free","__wbindgen_object_drop_ref","__wbindgen_throw","Request","fetch","instance","module","Response","WebAssembly","instantiateStreaming","e","headers","get","warn","bytes","arrayBuffer","instantiate","Instance","load","exports","__wbindgen_wasm_module","init","ParameterChanged","state","event","__spreadProps","parameter","target","value","PropertyChanged","prop","CheckboxChanged","idStr","origin","selectedCharacters","id","parseInt","newSelected","includes","filter","v","PropBonusChanged","propBonus","parseFloat","CharacterBonusChanged","characterBonus","AllFitBonusChanged","allFitBonus","EventTypeChanged","eventType","songNotes","apiChart","notes","timePerBeat","prevBeat","currTime","t","type","sort","beat","forEach","s","bpm","unshift","time","calcTime","its","feverStartNote","find","data","feverEndNote","feverStart","feverEnd","oldList","fever","skill","connections","hidden","t2","BuildTeam","selectedProfile","event_bonus","characters","prop_bonus","character_bonus","all_fit_bonus","begin","Date","now","result","cards","raw_user_profile","bands","song_data","skills","event_type","takeObject","gene_score","addBorrowedObject","rawCards","rawCharacters","rawBands","selectedSong","rawSkills","log","bestTeam","characterInputGroup","h","class","text","language","selectCharacter","map","character","characterName","server","for","name","onclick","characterInputBox","selectParaBox","selectProperty","onchange","selectPropBox","selectParameter","performance","technique","visual","bonusInput","step","min","max","eventTypeInput","selectMode","freePlay","multiPlay","vsPlay","toString","resultTeamView","values","src","getResURL","card_id","width","prefix","app","translates","getCurrLangNo","profiles","jsonFetcher","k","keys","GotBandsData","GotCardsData","selectedProfileLoader","navBar","serverSelect","claas","generate","node","document","getElementById"],"mappings":"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"}