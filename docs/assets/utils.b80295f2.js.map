{"version":3,"file":"utils.b80295f2.js","sources":["../../src/languages.js","../../src/utils.js"],"sourcesContent":["// 中文翻译\nconst zh_CN = {\n    selectLanguage: \"选择语言\",\n    aboutText1: \"少女乐团派对辅助工具集 / Wasmdori\",\n    frontPage: \"前端代码\",\n    subProject: \"子项目\",\n    helpProject: \"感谢下面这些第三方项目的帮助！！！\",\n    hintText1: \"选择服务器和截图后，点击截图中左上方的卡片，即可在截图右边的表格中选择识别出的卡片\",\n    hintText2: \"在表格中选择识别出的卡片后，点击“生成”按钮就可以在下方看到生成的 Bestdori 用户资料\",\n    hintText3: \"(可以使用多张图片导入数据，只需在“选择截图”处选择下一张图片就可以导入了)\",\n    cardRecognize: \"卡片识别\",\n    teamBuilder: \"组队助手\",\n    selectServer: \"选择服务器\",\n    selectCharacter: \"选择加成角色\",\n    userProfile: \"用户资料\",\n    selectParameter: \"选择加成技能\",\n    selectProperty: \"选择加成属性\",\n    selectScreenshot: \"选择截图\",\n    waitRecognize: \"等待识别\",\n    cardImage: \"图片\",\n    id: \"Id\",\n    cardName: \"卡片名字\",\n    character: \"角色\",\n    selected: \"选中\",\n    nextPage: \"下一页\",\n    prevPage: \"上一页\",\n    selectAll: \"全选\",\n    generate: \"生成\",\n    showImage: \"显示图片\",\n    hideImage: \"隐藏图片\",\n    performance: \"演出\",\n    technique: \"技巧\",\n    visual: \"形象\",\n    propBonus: \"属性加成大小\",\n    characterBonus: \"角色加成大小\",\n    allFitBonus: \"所有匹配时加成大小\",\n    selectMode: \"选择模式\",\n    freePlay: \"自由模式\",\n    multiPlay: \"协力模式\",\n    vsPlay: \"竞演模式\",\n    selectProfile: \"选择用户资料\",\n    profile: \"用户资料\",\n    profileName: \"资料名字\",\n    profileServer: \"资料服务器\",\n    importProfileData: \"导入资料数据\",\n    setPrimaryData: \"设置为首选资料\",\n    createNewProfile: \"创建新资料\",\n    deleteProfile: \"删除资料\",\n    appendToProfile: \"附加到资料\",\n    eventGacha: \"卡池千里眼\",\n    pageCount: \"选择页面活动个数\",\n    startEvent: \"选择开始活动\",\n    loading: \"加载中\",\n};\n\n// English translation\nconst en_US = {\n    selectLanguage: \"Select language\",\n    aboutText1: \"Bandori band girl party assist tools / Wasmdori\",\n    frontPage: \"Front-end project\",\n    subProject: \"Sub project\",\n    helpProject: \"Thank you, the following third-party projects!!!\",\n    hintText1: \"After selected server and screenshot, click the card on the left-top in the screenshot, you will see the recognized card in the left table\",\n    hintText2: \"After selected the recognized card in the table, click \\\"Generate\\\" button to generate the user profile that can be used by Bestdori\",\n    hintText3: \"(You can use multiple screenshot to generate user profile, just use \\\"Select screenshot\\\" to add next screenshot)\",\n    cardRecognize: \"Card Recognize\",\n    teamBuilder: \"Team Builder\",\n    selectServer: \"Select server\",\n    selectCharacter: \"Select bonus Character\",\n    userProfile: \"User profile\",\n    selectParameter: \"Select bonus parameter\",\n    selectProperty: \"Select bonus property\",\n    selectScreenshot: \"Select screenshot\",\n    waitRecognize: \"Waiting for card recognition\",\n    cardImage: \"Image\",\n    id: \"Id\",\n    cardName: \"Card name\",\n    character: \"Character\",\n    selected: \"Selected\",\n    nextPage: \"Next page\",\n    prevPage: \"Prev page\",\n    selectAll: \"Select all\",\n    generate: \"Generate\",\n    showImage: \"Show image\",\n    hideImage: \"Hide image\",\n    performance: \"Performance\",\n    technique: \"Technique\",\n    visual: \"Visual\",\n    propBonus: \"Prop bonus\",\n    characterBonus: \"Character bonus\",\n    allFitBonus: \"All fit bonus\",\n    selectMode: \"Select game mode\",\n    freePlay: \"Free Play\",\n    multiPlay: \"Multi Play\",\n    vsPlay: \"VS Play\",\n    profile: \"User Profile\",\n    selectProfile: \"Select profile\",\n    profileName: \"Profile name\",\n    profileServer: \"Profile server\",\n    importProfileData: \"Import profile\",\n    setPrimaryData: \"Set as primary profile\",\n    createNewProfile: \"Create new profile\",\n    deleteProfile: \"Delete profile\",\n    appendToProfile: \"Append to profile\",\n    eventGacha: \"Event-Gacha-Viewer\",\n    pageCount: \"Select item per page\",\n    startEvent: \"Select start event\",\n    loading: \"Loading\",\n}\n\n// TODO: More translation and language\nconst translates = [en_US, en_US, zh_CN, zh_CN];\n\nexport { translates }","import { h, text } from \"hyperapp\"\nimport { translates } from \"./languages.js\"\n\nconst dict = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_';\n\nconst fetchJson = (dispatch, options) => {\n    fetch(options.url)\n        .then(response => response.json())\n        .then(data => dispatch(options.action, data))\n}\n\nconst jsonFetcher = (url, action) => [fetchJson, { url, action }]\n\nconst GotBandsData = (state, data) => ({\n    ...state,\n    rawBands: data\n})\n\nconst GotCardsData = (state, data) => ({\n    ...state,\n    rawCards: data\n})\n\nconst GotHashesData = (state, data) => ({\n    ...state,\n    rawHashes: data\n})\n\nconst v = (t, e) => {\n    let ret = '';\n    for (let i = 0; i < e; i++) {\n        let a = t % 64;\n        t = Math.floor(t / 64);\n        ret = dict[a] + ret;\n    }\n    return ret;\n}\n\n/**\n * Generate Bestdori's profile data\n * @param {Array} cards Bestdori's calculated card data\n * @returns {string} encoded data string\n */\nconst geneEncodedStr = cards => {\n    let data = '';\n    for (let i = 0; i < cards.length; i++) {\n        let card = cards[i];\n        data += card.id >= 10000 ? v(card.id - 10000 + 3072, 2) : v(card.id, 2);\n        data += v(card.level, 1);\n        data += v(1 * (card.exclude ? 1 : 0) + 2 * card.art + 4 * card.train + 8 * card.ep + 24 * card.skill, 2)\n    }\n    return data;\n}\n\n/**\n * Generate resources url\n * @param {*} card Bestdori's card data\n * @param cardId card id\n * @param trained card is trained or not\n * @param server resource server\n * @returns {string} url\n */\nconst getResURL = (card, cardId, trained=true, server=\"jp\") => {\n    let partNum = Math.floor(parseInt(cardId) / 50);\n    let part = partNum.toString().padStart(5, '0');\n    let suffix = card.rarity <= 2 || !trained ? \"normal\" : \"after_training\"; // Card(rarity < 2) only has normal card image\n    return `https://bestdori.com/assets/${server}/thumb/chara/card${part}_rip/${card.resourceSetName}_${suffix}.png`;\n}\n\n/**\n * Change the \"languageNo\" in localStorage and \"language\" in state\n * @param {*} state \n * @param {Event} event \n * @returns state\n */\nconst ChangeLanguage = (state, event) => {\n    localStorage.setItem(\"languageNo\", event.target.name)\n    return {\n        ...state,\n        language: translates[parseInt(event.target.name)]\n    };\n}\n\n/**\n * Get current languageNo\n * @returns {number}\n */\nconst getCurrLangNo = () => (parseInt(localStorage.getItem(\"languageNo\")) || 0)\n\n/**\n * Navigation bar\n * @param {*} state \n * @returns \n */\nconst navBar = state => h(\"nav\", { class: \"navbar navbar-expand-lg navbar-light bg-light\" }, [\n    h(\"div\", { class: \"container\" }, [\n        h(\"a\", { class: \"navbar-brand\", href: \"./\" }, text(\"Wasmdori\")),\n        h(\"button\", {\n            class: \"navbar-toggler collapsed\",\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            \"data-bs-target\": \"#navbarNavAltMarkup\",\n            \"aria-controls\": \"navbarNavAltMarkup\",\n            \"aria-expanded\": \"false\",\n            \"aria-label\": \"Toggle navigation\"\n        }, [\n            h(\"span\", { class: \"navbar-toggler-icon\" })\n        ]),\n        h(\"div\", { id: \"navbarNavAltMarkup\", class: \"collapse navbar-collapse\" }, [\n            h(\"div\", { class: \"navbar-nav\" }, [\n                h(\"a\", { class: \"nav-link\", href: \"./card_recognize.html\" }, text(state.language.cardRecognize)),\n                h(\"a\", { class: \"nav-link\", href: \"./team_builder.html\" }, text(state.language.teamBuilder)),\n                h(\"a\", { class: \"nav-link\", href: \"./profile.html\" }, text(state.language.profile)),\n                h(\"a\", { class: \"nav-link\", href: \"./gacha.html\" }, text(state.language.eventGacha)),\n                h(\"div\", { class: \"nav-item dropdown\" }, [\n                    h(\"a\", {\n                        href: \"#\",\n                        class: \"nav-link dropdown-toggle\",\n                        role: \"button\",\n                        \"data-bs-toggle\": \"dropdown\",\n                        \"aria-expanded\": \"false\"\n                    }, text(state.language.selectLanguage)),\n                    h(\"ul\", { class: \"dropdown-menu\" }, [\n                        h(\"li\", {}, [\n                            h(\"button\", { class: \"dropdown-item\", name: \"1\", onclick: ChangeLanguage }, text(\"English\"))\n                        ]),\n                        h(\"li\", {}, [\n                            h(\"button\", { class: \"dropdown-item\", name: \"3\", onclick: ChangeLanguage }, text(\"简体中文\"))\n                        ])\n                    ])\n                ])\n            ])\n        ])\n    ])\n])\n\n/**\n * Server change effect\n * @param {*} state \n * @param {Event} event \n * @returns \n */\nconst ServerChange = (state, event) => ({\n    ...state,\n    server: parseInt(event.target.value)\n})\n\n/**\n * Load profiles data from localStorage\n * @param {*} dispatch dispatch function\n * @param {*} param1 action\n */\nconst loadProfile = (dispatch, { action }) => {\n    const profileStr = localStorage.getItem(\"profiles\");\n    let profiles = [];\n    if (profileStr !== null && profileStr.length !== 0) {\n        profiles = JSON.parse(profileStr);\n    }\n    dispatch(action, profiles);\n}\n\n/**\n * Got profile and set it to state\n * @param {*} state app's state\n * @param {*} data profiles data\n * @returns new state\n */\nconst GotProfile = (state, data) => ({\n    ...state,\n    profiles: data\n})\n\n/**\n * Got selected profile and set it to state\n * @param {*} state app's state\n * @param {*} data profiles data\n * @returns new state\n */\nconst GotSelectedProfile = (state, data) => {\n    // Get primaryProfileS\n    let primaryProfileS = localStorage.getItem(\"primaryProfile\");\n    let primaryProfile = 0;\n    if (primaryProfileS !== null) {\n        primaryProfile = parseInt(primaryProfileS);\n    }\n    // Get selectedProfile\n    let selectedProfile = data[primaryProfile];\n    if (data.length <= primaryProfile) {\n        selectedProfile = null;\n    }\n    return {\n        ...state,\n        profiles: data,\n        selectedProfile: selectedProfile\n    }\n}\n\nconst selectedProfileLoader = () => [loadProfile, { action: GotSelectedProfile }]\n\nconst profileLoader = () => [loadProfile, { action: GotProfile }]\n\n/**\n * Remove duplicated card in profile's data\n * @param {string} data origin data \n * @returns cleaned data\n */\nconst RemoveDuplicatedCard = (data) => {\n    let set = new Set();\n    for (let i = 0; i < data.length; i += 5) {\n        set.add(data.slice(i, i + 5));\n    }\n    let cleaned = \"\";\n    for (const card of set) {\n        cleaned += card;\n    }\n    return cleaned;\n}\n\n/**\n * Get gacha link\n * @param gachaName\n * @returns {string}\n */\nconst getGachaLink = (gachaName) => (gachaName[1] ? gachaName[1] : gachaName[0]).replace(/[^a-z0-9]+/gi, ' ').replace(/\\s+/g, '-')\n\n/**\n * Get banner URL\n * @param {string} server server shorthand(like cn)\n * @param {string} bannerId banner resource id\n * @returns \n */\nconst getBannerUrl = (server, bannerId) => `https://bestdori.com/assets/${server}/homebanner_rip/${bannerId}.png`\n\n/**\n * Select server option box\n * @param {*} state \n * @returns \n */\nconst serverSelect = (state, handleFunc=ServerChange) => h(\"div\", { class: \"row p-1\" }, [\n    h(\"div\", { class: \"col\" }, [\n        h(\"label\", { for: \"server\" }, text(state.language.selectServer)),\n        h(\"select\", { name: \"server\", id: \"server\", class: \"form-select\", onchange: handleFunc }, [\n            h(\"option\", { value: \"0\" }, text(\"日本\")),\n            h(\"option\", { value: \"1\" }, text(\"International\")),\n            h(\"option\", { value: \"2\" }, text(\"繁体中文\")),\n            h(\"option\", { value: \"3\" }, text(\"简体中文\")),\n        ])\n    ])\n])\n\nexport {\n    jsonFetcher,\n    fetchJson,\n    GotBandsData,\n    GotCardsData,\n    GotHashesData,\n    geneEncodedStr,\n    getGachaLink,\n    getBannerUrl,\n    getResURL,\n    getCurrLangNo,\n    navBar,\n    ServerChange,\n    profileLoader,\n    selectedProfileLoader,\n    RemoveDuplicatedCard,\n    serverSelect\n}"],"names":["zh_CN","selectLanguage","aboutText1","frontPage","subProject","helpProject","hintText1","hintText2","hintText3","cardRecognize","teamBuilder","selectServer","selectCharacter","userProfile","selectParameter","selectProperty","selectScreenshot","waitRecognize","cardImage","id","cardName","character","selected","nextPage","prevPage","selectAll","generate","showImage","hideImage","performance","technique","visual","propBonus","characterBonus","allFitBonus","selectMode","freePlay","multiPlay","vsPlay","selectProfile","profile","profileName","profileServer","importProfileData","setPrimaryData","createNewProfile","deleteProfile","appendToProfile","eventGacha","pageCount","startEvent","loading","en_US","translates","fetchJson","dispatch","options","url","then","response","json","action","data","jsonFetcher","GotBandsData","state","__spreadProps","rawBands","GotCardsData","rawCards","GotHashesData","rawHashes","v","t","e","ret","i","a","Math","floor","geneEncodedStr","cards","length","card","level","exclude","art","train","ep","skill","getResURL","cardId","trained","server","part","parseInt","toString","padStart","suffix","rarity","resourceSetName","ChangeLanguage","event","setItem","target","name","language","getCurrLangNo","localStorage","getItem","navBar","h","class","href","text","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","role","onclick","ServerChange","value","loadProfile","profileStr","profiles","JSON","parse","GotProfile","GotSelectedProfile","primaryProfileS","primaryProfile","selectedProfile","selectedProfileLoader","profileLoader","RemoveDuplicatedCard","set","Set","add","slice","cleaned","getBannerUrl","bannerId","serverSelect","handleFunc","for","onchange"],"mappings":"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"}